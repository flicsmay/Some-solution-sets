 /***********************************
  ****problems 7.6 - 7.15 ***********
  **********************************/
 
 
 /****************7.6******************/
 
 Symbol|sp.se?|Symbol type|Mod def|Section
 buf	y		extern		main.o	.data
 bufp0	y		global		swap.o	.data
 bufp1	y		local		swap.o	.bss // unintilized
 swap	y		global		swap.o	.text
 temp	n
 incr	y		local		swap.o	.text
 count	y		local		swap.o	.data
 
 
 /****************7.7******************/
 
 add a static to the double x
 
 
 /****************7.8******************/
 
 A. DEF(main, 1) DEF(main, 2);
 B. UNKNOWN
 C. ERROR
 
 
 /****************7.9******************/
 
 Main in p2 which is weak symbol, and when complier dealing
 with multiply symbols, it choose the strong symbol in foo6.c
 (rule 2) and the frist hex in main is 0x55 (pushl %ebp)
 You can find it convinently in figure 7-19(if you get a book)
 
 
 /****************7.10*****************/
 
 I don't use gcc usually, So I'm not sure...
 A. gcc p.o libx.a p.o
 B. gcc p.o libx.a liby.a libx.add
 C. gcc p.o libx.a liby.a libx.a libz.a
 
 
 /****************7.11*****************/
 
 The spaces is reserved for the .bss data ?
 
 
 /****************7.12*****************/
 
 actually I have no idea what the address and the value are
 meaning about. It just an offset store in the original space
 and the add it to the ADD(symbol); So, am I get the core ideas
 I may don't have to fill it.
	linenum		address		value
		15		0x804945c	
		16		
		18
		19
		23
 
 /****************7.13******************/
 
 A. offset	symbol	rel.type
	0x12		p3		R_386_PC32
	0x19		xp		R_386_32
	0x20		p2		R_386_PC32
	
 B. 0x4			x		R_386_32
 
 
 
 /****************7.14******************/
 
 A. offset 	symbol 	rel.type
	0x11				R_386_32
	
 B. 0x0-0x14			R_386_32
 
 
 /****************7.15******************/
 
 Don't know how to test it...
	
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 