/*************************************************
			Problems 10.6 - 10.10 
 *************************************************/
 
 
 /************** 10.6 *********************/
 
 fd = 4 // maybe
 
 
 /************** 10.7 *********************/
 
 #include "csapp.h"
 
 int main(int argc, char **argv)
 {
	int n;
	rio_t rio;
	char buf[MAXBUF];
	
	Rio_readinitb(&rio, STDIN_FILENO);
	while ((n = Rio_readnb(&rio, buf, MAXBUF)) != 0)
		Rio_writen(STDOUT_FILENO, buf, n);
 }
 
 
 /*************** 10.8 ********************/
 
 #include "csapp.h"
 
 int main(int argc, char **argv)
 {
	struct stat stat;
	char *type, *readok;
	
	fstat(argv[1], &stat);
	if (S_ISREG(stat.st_mode))
		type = "regular";
	else if (S_ISDIR(stat.st_mode))
		type = "directory";
	else
		type = "other";
	if ((stat.at_mode & S_IRUSR))
		readok = "yes";
	else
		readok = "no";
	
	printf("type: %s, read: %s\n", type, readok);
	exit(0);
 }
 
 
 /****************** 10.9 ******************/
 
 // shell relocal the fd 3 to the stdinput
 if (Fork() == 0) 
 {
	int fd = open("foo.txt", O_RDONLY, 0);
	dup2(fd, 1);
	close(fd);
	Execve("fstatcheck", argv, envp);
 }
 
 
 /***************** 10.10 ******************/
 
 int main(int argc, char **argv)
 {
	int n;
	rio_t rio;
	char buf[MAXLINE];
	int fd;
	
	if (argc == 2)
	{
		fd = open(argv[1], O_RDONLY, 0);
		dup2(fd, STDIN_FILENO);
		close(fd);
	}
	
	Rio_readinitb(&rio, STDIN_FILENO);
	while((n = Rio_readlineb(&rio, buf, MAXLINE)) != 0)
		Rio_writen(STDOUT_FILENO, buf, n);
 }
 
 
