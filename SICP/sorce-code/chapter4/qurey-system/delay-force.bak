#lang planet neil/sicp

; delay & force

(define (delay exp)
  (lambda () exp))

(define (force delayed-object)
   (delayed-object))

(define (stream-car stream) (car stream))

(define (stream-cdr stream) (force (cdr stream)))

(define (stream-map proc . argstream)
  (if (null? (car argstream))
      '()
      (cons-stream
       (apply proc 
              (map (lambda (s)
                     (stream-car s))
                   argstream))
       (apply stream-map 
              (cons proc (map (lambda (s)
                                (stream-cdr s))
                              argstream))))))