/***********************************************
		Exercise 3.1 - 3.10
***********************************************/
 
 
 /****************** 3.1 **********************/
 
 ; Exercise 3.1

(define (make-accumulator total)
  (lambda (num)
    (begin (set! total (+ total num))
           total)))   
		   
 /****************** 3.2 **********************/
 
 ; Exercise 3.2

(define (make-monitored func)
  (define count 0)
  (define (how-many-calls?)
    count)
  (define (reset-count)
    (set! count 0))
  (define (dispatch x)
    (cond ((eq? x 'how-many-calls?)
           (how-many-calls?))
          ((eq? x 'reset-count)
           (reset-count))
          (else
           (begin (set! count (+ 1 count))
                  (func x)))))
  dispatch)
 
 /****************** 3.3 **********************/
 
 ; Exercise 3.3

(define (make-account balance password)
  (define (withdraw amount)
    (if (>= balance amount)
        (begin (set! balance (- balance amount))
               balance)
        "Insufficient funds"))
  (define (deposit amount)
    (set! balance (+ balance amount))
    balance)
  (define (dispatch pwd m)
    (if (eq? pwd password)
        (cond ((eq? m 'withdraw) withdraw)
              ((eq? m 'deposit) deposit)
              (else (error "Unknown request -- MAKE-ACCOUNT"
                           m)))
        (error "Incorrect password")))
  dispatch)
 
 /****************** 3.4 **********************/
 
 ; Exercise 3.4

(define (make-account balance password)
  (define incorrect-count 0)
  (define (withdraw amount)
    (if (>= balance amount)
        (begin (set! balance (- balance amount))
               balance)
        "Insufficient funds"))
  (define (deposit amount)
    (set! balance (+ balance amount))
    balance)
  (define (call-the-cops) "calling the cops")
  (define (dispatch pwd m)
    (if (eq? pwd password)
        (begin (set! incorrect-count 0)
               (cond ((eq? m 'withdraw) withdraw)
                     ((eq? m 'deposit) deposit)
                     (else (error "Unknown request -- MAKE-ACCOUNT"
                                  m))))
        (lambda (x) (begin (set! incorrect-count (+ incorrect-count 1))
                           (if (> incorrect-count 6)
                               (call-the-cops)
                               "Incorrect password")))))
  dispatch)
 
 /****************** 3.5 **********************/
 
 R(in circular) = S (circular) / S (rectangle)
				= pi * r^2 / 4 r^2
				= pi / 4
				
 
 /****************** 3.6 **********************/
 
 skip;
 
 /****************** 3.7 **********************/
 
 ; Exercise 3.3

(define (make-account balance password)
  (define (withdraw amount)
    (if (>= balance amount)
        (begin (set! balance (- balance amount))
               balance)
        "Insufficient funds"))
  (define (deposit amount)
    (set! balance (+ balance amount))
    balance)
  (define (make-joint pwd)
    (set! password (append (if (pair? password)
                               password
                               (list password))
                           (list pwd))))
  (define (right-pwd? pwd rest)
    (cond ((null? rest)
           #f)
          ((not (pair? rest))
           (eq? rest pwd))
          ((eq? (car rest) pwd)
           #t)
          (else
           (right-pwd? pwd (cdr rest)))))
          
  (define (dispatch pwd m)
    (if (right-pwd? pwd password)
        (cond ((eq? m 'withdraw) withdraw)
              ((eq? m 'deposit) deposit)
              ((eq? m 'make-joint) make-joint)
              (else (error "Unknown request -- MAKE-ACCOUNT"
                           m)))
        (lambda (x) "Incorrect password")))
  dispatch)


(define (make-joint acc password new-pwd)
  (begin ((acc password 'make-joint) new-pwd)
         acc))
 
 /****************** 3.8 **********************/
 
 ; Exercise 3.8

(define (f x)
  (define count 0)
  (let ((original count))
    (begin (set! count (+ count x))
           original)))
 
 /****************** 3.9 **********************/
 
 skip;
 
 /****************** 3.10 **********************/
 
 there are no much of different between them
 as both of them get local variable of themselves.
 
 
 
 
 
 
 
 